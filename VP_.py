import pandas as pd
import ipywidgets as widgets
from IPython.display import display, HTML, clear_output

# === –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
file_path = r"D:\Work\Python\Dash_express\OP\Result.csv"
df = pd.read_csv(file_path, sep=';', encoding='utf-8-sig', decimal=',')

# –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —á–∏—Å–µ–ª
for col in ["–û–ü", "–û–ü –ü–ª–∞–Ω", "–í–ü", "–í–ü –ü–ª–∞–Ω"]:
    df[col] = pd.to_numeric(df[col], errors='coerce').fillna(0)

# –†–∞—Å—á—ë—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
df["% –û–ü"] = df["–û–ü"] / df["–û–ü –ü–ª–∞–Ω"].replace(0, pd.NA)
df["% –í–ü"] = df["–í–ü"] / df["–í–ü –ü–ª–∞–Ω"].replace(0, pd.NA)

# === –§–∏–ª—å—Ç—Ä—ã ===
def dropdown(column_name):
    return widgets.Dropdown(
        options=["–í—Å–µ"] + sorted(df[column_name].dropna().unique().tolist()),
        value="–í—Å–µ",
        description=column_name + ":",
        layout=widgets.Layout(width="300px")
    )

region_filter = dropdown("–†–µ–≥–∏–æ–Ω")
plan_filter = dropdown("–î–æ–±–∞–≤–∏—Ç—å –≤ –ø–ª–∞–Ω")
manager_filter = dropdown("–ú–µ–Ω–µ–¥–∂–µ—Ä")
buyer_filter = dropdown("–ü–æ–∫—É–ø–∞—Ç–µ–ª—å")

# === –ü–æ–¥—Å–≤–µ—Ç–∫–∞ ===
def highlight_cells(val):
    if pd.isna(val):
        return ''
    if val > 1:
        return 'background-color: lightgreen'
    elif val < 1:
        return 'background-color: lightcoral'
    return ''

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ===
def update_dashboard(change=None):
    clear_output(wait=True)
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
    dff = df.copy()
    if region_filter.value != "–í—Å–µ":
        dff = dff[dff["–†–µ–≥–∏–æ–Ω"] == region_filter.value]
    if plan_filter.value != "–í—Å–µ":
        dff = dff[dff["–î–æ–±–∞–≤–∏—Ç—å –≤ –ø–ª–∞–Ω"] == plan_filter.value]
    if manager_filter.value != "–í—Å–µ":
        dff = dff[dff["–ú–µ–Ω–µ–¥–∂–µ—Ä"] == manager_filter.value]
    if buyer_filter.value != "–í—Å–µ":
        dff = dff[dff["–ü–æ–∫—É–ø–∞—Ç–µ–ª—å"] == buyer_filter.value]

    # –í—ã–≤–æ–¥ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    display(HTML("<h2>üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º</h2>"))
    display(widgets.HBox([region_filter, plan_filter, manager_filter, buyer_filter]))

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    display_cols = ["–ú–µ–Ω–µ–¥–∂–µ—Ä", "–ü–æ–∫—É–ø–∞—Ç–µ–ª—å", "–ö–æ–¥", "–û–ü", "–û–ü –ü–ª–∞–Ω", "% –û–ü", "–í–ü", "–í–ü –ü–ª–∞–Ω", "% –í–ü"]
    styled_df = dff[display_cols].style \
        .format({
            "–û–ü": "{:,.2f}",
            "–û–ü –ü–ª–∞–Ω": "{:,.2f}",
            "% –û–ü": "{:.0%}",
            "–í–ü": "{:,.2f}",
            "–í–ü –ü–ª–∞–Ω": "{:,.2f}",
            "% –í–ü": "{:.0%}"
        }) \
        .applymap(highlight_cells, subset=["% –û–ü", "% –í–ü"])
    
    display(HTML("<br><h4>üìã –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h4>"))
    display(styled_df)

# === –ü—Ä–∏–≤—è–∑–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π ===
region_filter.observe(update_dashboard, names='value')
plan_filter.observe(update_dashboard, names='value')
manager_filter.observe(update_dashboard, names='value')
buyer_filter.observe(update_dashboard, names='value')

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞—à–±–æ—Ä–¥–∞ ===
update_dashboard()
